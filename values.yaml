## Configuration for the backup container
## @param backupcontainer.name Name of the backup container
## @param backupcontainer.image Docker image to use for the backup container
## @param backupcontainer.command Command to run within the container
## @param backupcontainer.resources Resource requests and limits for the container
backupcontainer:
  name: backup-box
  image: busybox:latest
  command: ["/bin/sh", "-c", "touch /tmp/healthy && sleep infinity"] # Init healthcheck and sleep indefinitely
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

## Shared configuration for all cron jobs
## @param sharedCronjobConfig.image Docker image to use for the cron job
## @param sharedCronjobConfig.command Command to run in the cron job container
## @param sharedCronjobConfig.destinationBackupDirectory Base directory for storing backups
## @param sharedCronjobConfig.backupName Base name for the backup files
## @param sharedCronjobConfig.backupDirectory Directory containing the files to be backed up
sharedCronjobConfig:
  image: bitnami/dokuwiki
  command: ["/bin/bash", "-c"]
  destinationBackupDirectory: /destination/backups
  backupName: dw-backup
  backupDirectory: /bitnami/dokuwiki/data/media/wiki/backup

## Configuration for a job that runs at install/upgrade that executes a job with the variables from the daily cronjob
## @param testJob.enabled Enable the test backup job
## @param testJob.retentionTime Time (in seconds) to retain the test job. 86400 is one day.
testJob:
  enabled: true
  retentionTime: 86400

## Configuration for cron jobs scheduling backups
## Add named configurations to generate additional cron jobs
## @param cronjobs.*.enabled Enable the backup cron job
## @param cronjobs.*.schedule Schedule to run the backup cron job
## @param cronjobs.*.successfulJobsHistoryLimit Number of successful jobs to retain
## @param cronjobs.*.failedJobsHistoryLimit Number of failed jobs to retain
## @param cronjobs.*.daysToRetain Number of days to retain backups created under this cronjob
cronjobs:
  - name: daily
    enabled: true
    schedule: "0 0 * * *" # Schedule to run daily at midnight
    successfulJobsHistoryLimit: 3
    failedJobsHistoryLimit: 3
    daysToRetain: 7
  - name: weekly
    enabled: true
    schedule: "0 4 * * 1" # Schedule to run weekly on Mondays at 4am
    successfulJobsHistoryLimit: 3
    failedJobsHistoryLimit: 3
    daysToRetain: 30
  - name: monthly
    enabled: true
    schedule: "0 6 1 * *" # Schedule to run monthly on the 1st at 6am
    successfulJobsHistoryLimit: 3
    failedJobsHistoryLimit: 3
    daysToRetain: 365

## Configuration for the persistent volume claim (PVC)
## @param pvc.existingClaim Whether an existing claim is being used
## @param pvc.name Name of the backup containerPVC
## @param pvc.storageClass Storage class for the PVC. Should be a file backup storage class
## @param pvc.accessModes Access mode for the PVC (ReadWriteMany)
## @param pvc.storage Requested storage size for the backup container PVC
pvc:
  existingClaim: false
  name: backup-pvc
  storageClass: netapp-file-backup
  storage: 200Mi

## Configuration for the service account
## @param serviceAccount.existingServiceAccount Whether an existing service account is being used
## @param serviceAccount.exists Whether the service account exists
## @param serviceAccount.name Name of the service account
serviceAccount:
  existingServiceAccount: false
  name: backup-sa

## Configuration for volumes
## @param volumes.dokuwikiData.claimName Name of the persistent volume claim for the dokuwiki instance
volumes:
  dokuwikiData:
    claimName: dokuwiki-pvc-name
